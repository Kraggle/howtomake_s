import{jQuery as t}from"./src/jquery-3.5.1-min.js";import e from"./custom/Paths.js";import{K as n,timed as s}from"./custom/K-min.js";import a from"./custom/SVGIcons-min.js";t((()=>{const r=t("#htm-keyword-info");if(!r.length)return;const o={numbers:{1:"one",2:"two",3:"three",4:"four",5:"five",6:"six",7:"seven",8:"eight",9:"nine"},ignore:[],timed:s(),content:null,new:!1,on:!0,groups:{},update(e){o.timed.run((()=>{o.new=!1,e||(e=t("textarea#content")),o.on=!!e.level;const n=o.on?e.level.content:t(e.target?e.target:e).val();n!==o.content&&(o.content=n,o.task())}),o.new?0:1e3*o.refresh)},createElements(){t(".htm-tab-wrap .tab-group").css("grid-template-columns",`repeat(${o.max-(o.min-1)}, max-content)`);const e=e=>{const n=t(`.tab[tab=${e}]`,r);return n.length?n:t("<div />",{class:"tab",tab:e,text:e})},n=e=>{const n=t(`.box[box=${e}]`,r),s=1==e?"":"s";return n.length?n:t("<div />",{class:"box",box:e,html:`<h3 class="title">Keywords <span>(${o.numbers[e]} word${s})</span></h3>\n\t\t\t\t\t<input type="text" class="filter-input" filter="${e}" placeholder="Keyword Filter"/>\n\t\t\t\t\t<div class="keys-table"></div>`})};for(let t=1;t<=10;t++){const s=e(t),a=n(t);t<o.min||t>o.max?(s.remove(),a.remove()):(s.appendTo(".htm-tab-wrap .tab-group"),a.appendTo(".htm-tab-wrap .htm-boxes"))}},task(){o.createElements();const e=t("<div/>",{html:o.content}).text().split(/[ ]{0,}[.;:?!\n][ ]{0,}/),s={};for(let t=o.min;t<=o.max;t++)s[t]={};let a=0;t.each(e,((e,r)=>{if(r.length<4||!r.match(/\w+/))return;const i=r.split(/ \W{0,}|\W{0,} /);a+=i.length,t.each(s,((e,s)=>{e=parseInt(e),i.length>=e&&t.each(i,((t,a)=>{let r="";for(let n=t;n<e+t;n++){if(!i[n])return;r+=" "+i[n]}r=r.trim().toLowerCase();const c=r.replaceAll("’","'").match(/^[^ ]+/)[0],l=r.replaceAll("’","'").match(/[^ ]+$/)[0];if(!(r.length<3||r.match(/^(\d+|\d.+\d)$/))){if(o.enabled){if(e<3&&(n.isInArray(c,o.ignore)||n.isInArray(l,o.ignore)))return;if(e>2&&n.isInArray(c,o.ignore)&&n.isInArray(l,o.ignore))return}s[r]||(s[r]=0),s[r]++}}))}))})),o.groups={},t.each(s,((e,n)=>{o.groups[e]=[],t.each(n,((t,n)=>{n>=o.count&&o.groups[e].push({keywords:t,count:n,density:n/(a/e)*100})})),o.groups[e].sort(((t,e)=>e.count-t.count))})),o.display()},display(){t.each(o.groups,((e,n)=>{const s=t(`.htm-boxes [box=${e}] .keys-table`);s.html(`\n\t\t\t\t\t<div class="row head">\n\t\t\t\t\t\t<div class="head-wrap" order="asc" sort="filter">\n\t\t\t\t\t\t\t<span class="left">Keywords</span>\n\t\t\t\t\t\t\t<div class="icon">${a.sort}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="head-wrap" order="asc" sort="frequency">\n\t\t\t\t\t\t\t<span>Freq.</span>\n\t\t\t\t\t\t\t<div class="icon">${a.sort}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="head-wrap sort" order="desc" sort="density">\n\t\t\t\t\t\t\t<span>Density</span>\n\t\t\t\t\t\t\t<div class="icon">${a.sort}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="sort-table"></div>\n\t\t\t\t`),t.each(n,((e,n)=>{t(".sort-table",s).append(`\n\t\t\t\t\t\t<div class="row item" filter="${n.keywords}" \n\t\t\t\t\t\t\tfrequency="${n.count}" density="${(1e4*n.density).toFixed(0)}">\n\t\t\t\t\t\t\t<span class="left">${n.keywords}</span>\n\t\t\t\t\t\t\t<span>${n.count}</span>\n\t\t\t\t\t\t\t<span>${n.density.toFixed(2)}%</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`)}))}))},settings(){t.getJSON(e.ajax,{action:"get_keyword_settings",nonce:t("#keyword_nonce").val()},(function(t){o.ignore=t.ignore_list,o.min=parseInt(t.min_words),o.max=parseInt(t.max_words),o.refresh=parseInt(t.refresh),o.count=parseInt(t.min_count),o.enabled="true"==t.ignore_enabled,o.content="",o.new=!0,o.update()}))}};t("#post-body-content").on("input propertyChange","textarea#content",o.update);const i=setInterval((()=>{tinyMCE.editors.length&&"content"===tinyMCE.editors[0].id&&(tinyMCE.editors[0].on("change",o.update),clearInterval(i))}),2e3);o.settings(),r.on("click",".tab:not(.active)",(function(){t(".active",r).removeClass("active"),t(this).addClass("active");const e=t(`.box[box=${t(this).attr("tab")}]`,r);e.addClass("active"),t(".filter-input",e).trigger("input")})),r.on("click",".button.delete",(function(){const e=t(this).attr("delete"),n=t(this).closest(`[is=${e}]`);t(`[is=${e}]`,r).length>1?n.remove():t("input",n).val("")})),r.on("click",".button-primary[add]",(function(){const e=t(this).attr("add"),n=t(this).parent();n.siblings(`[is=${e}]`).eq(0).clone().insertBefore(n).find("input").val("")})),r.on("input propertyChange",".filter-input",(function(){const e=t(this).data();!e.timer&&(e.timer=s()),e.timer.run((()=>{const e=t(this).val(),n=t(this).parent();t(".filter-input",r).val(e),n.find("[filter]").removeClass("hide"),e&&n.find(`:not([filter*=${e}])`).addClass("hide")}),500)})),r.on("click",".head-wrap",(function(){let e=t(this).attr("order");const n=t(this).attr("sort");t(this).hasClass("sort")?(e="asc"==e?"desc":"asc",t(this).attr("order",e)):(t(this).siblings(".sort").removeClass("sort"),t(this).addClass("sort"));const s=t(this).closest(".keys-table"),a=s.find(".row.item").sort(((s,a)=>{let r=t(s).attr(n),o=t(a).attr(n);const i="asc"==e?-1:1,c="asc"==e?1:-1;return isNaN(r)||(r=parseInt(r),o=parseInt(o)),r<o?i:r>o?c:0}));t(".sort-table",s).html(a)})),t(".save",r).on("click",(function(){const n={};t("[key]",r).each((function(){const e=t("input",this),s=t(this).attr("key");let a=[];e.length>1?e.each((function(){t(this).val()&&a.push(t(this).val())})):a="checkbox"==e.attr("type")?e.is(":checked"):e.val(),n[s]=a})),t.ajax({url:e.ajax,type:"POST",data:{action:"set_keyword_settings",nonce:t("#keyword_nonce").val(),data:n}}).done((()=>{o.settings()}))}))}));